#!/usr/bin/env php
<?php
/**
 * Monitors incoming packets
 *
 * PHP Version 5
 *
 * <pre>
 * Scripts related to HUGnet
 * Copyright (C) 2007-2012 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Scripts
 * @package    Scripts
 * @subpackage Misc
 * @author     Scott Price <prices@hugllc.com>
 * @author     Jeff Liesmaki <jeffl@hugllc.com>
 * @copyright  2007-2012 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:Scripts
 *
 */
/** Packet log include stuff */
require_once 'HUGnetLib/HUGnetLib.php';

$config = HUGnetLib::Args(
    array(
        "i" => array("name" => "DeviceID", "type" => "string", "args" => true),
        "D" => array("name" => "Date", "type" => "string", "args" => true),
    ),
    "args",
    $argv
);

$config->addLocation("/usr/share/HUGnet/config.ini");
$cli = HUGnetLib::ui($config, "CLI");
$cli->help(
    $cli->system()->get("program")."
Copyright Hunt Utilities Group, LLC
HUGnet Scripts v".trim(file_get_contents("HUGnetScripts/VERSION.TXT", true))."  "
."HUGnetLib v".$cli->system()->get("version")."

Resets the last average time to 0 so that all averages are recalculated.

Usage: ".$cli->system()->get("program")." -i <DeviceID> [-v] [-f <file>]
Arguments:
    -i <DeviceID>   The device ID to use.  Should be a hex value up to 6 digits.  Defaults to all
    -D <Date>       The date to reset the last average dates to
    -v              Increment the verbosity
    -f <file>       The config file to use",
    $config->h
);

$dev = $cli->system()->device();

$params = array(
    "LastAverage15MIN", "LastAverageHOURLY", "LastAverageDAILY", "LastAverageWEEKLY",
    "LastAverageMONTHLY", "LastAverageYEARLY", "LastAverage30SEC", "LastAverage1MIN",
    "LastAverage5MIN"
);
if (strlen($config->i) > 0) {
    $did = hexdec($config->i);
    $ids = array($did => $did);
} else {
    $ids = $dev->ids(array("Active" => 1));
}

if (strlen($config->D) == 0) {
    $cli->help();
    $cli->out();
    $cli->out("Date must be specified");
    exit(1);
} else {
    $date = \HUGnet\db\Table::unixDate($config->D);
}
foreach (array_keys((array)$ids) as $key) {
    $dev->load($key);
    $cli->out($dev->get("DeviceID"));
    foreach ($params as $param) {
        $dev->setParam($param, $date);
        $dev->setParam($param."Try", $date);
        $cli->out($param." set to ".$dev->getParam($param));
    }
    $dev->store();
}

$cli->out("Finished");
exit(0);

?>
