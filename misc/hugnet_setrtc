#!/usr/bin/env php
<?php
/**
 * Monitors incoming packets
 *
 * PHP Version 5
 *
 * <pre>
 * Scripts related to HUGnet
 * Copyright (C) 2007-2011 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Scripts
 * @package    Scripts
 * @subpackage Misc
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2011 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:Scripts
 *
 */
/** HUGnet code */
//require_once dirname(__FILE__).'/../head.inc.php';
/** Packet log include stuff */
require_once 'HUGnetLib/HUGnetLib.php';

$config = HUGnetLib::Args(
    array(
        "i" => array("name" => "DeviceID", "type" => "string", "args" => true),
        "a" => array("name" => "all", "type" => "bool", "args" => false),
    ),
    "args",
    $argv
);
$config->addLocation("/usr/share/HUGnet/config.ini");
$cli = HUGnetLib::ui($config, "Daemon");
$cli->help(
    $cli->system()->get("program")."
Copyright Hunt Utilities Group, LLC
HUGnet Scripts v".trim(file_get_contents("HUGnetScripts/VERSION.TXT", true))."  "
."HUGnetLib v".$cli->system()->get("version")."

Reboots the given endpoint

Usage: ".$cli->system()->get("program")." -i <DeviceID> [-a] [-v] [-f <file>]
Arguments:
    -i <DeviceID>   The device ID to use.  Should be a hex value up to 6 digits
    -a              Broadcast this to all devices.
    -v              Increment the verbosity
    -f <file>       The config file to use",
    $config->h
);
if ((strlen($config->i) == 0) && !($config->a)) {
    $cli->help();
    $cli->out();
    $cli->out("DeviceID must be specified, or -a should be given to set all");
    exit(1);
}
$cli->out("Starting ".$cli->system()->get("program"));

if ($config->a) {
    $cli->out("Sending a broadcast packet");
    $cli->system()->device(hexdec($config->i))->network()->timeBroadcast();
} else {
    $ret = $cli->system()->device(hexdec($config->i))->network()->setRTC();
    if ($ret) {
        $cli->out("Set time to ".gmdate("Y-m-d H:i:s", $ret));
    } else {
        $cli->out("Failed to set time on device ".$config->i);
    }
}
print "Finished\n";
exit(0);
?>
