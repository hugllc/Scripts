<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * Scripts related to HUGnet
 * Copyright (C) 2007-2009 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Test
 * @package    ScriptsTest
 * @subpackage Test
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2009 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$    
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
 // Call epPollTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'epPollTest::main');
}

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../endpoints/lib/epPoll.php';
require_once dirname(__FILE__).'/../../../HUGnetLib/hugnet.inc.php';

/**
 * Test class for epPoll.
 * Generated by PHPUnit on 2007-11-13 at 11:03:41.
 *
 * @category   Test
 * @package    ScriptsTest
 * @subpackage Test
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2009 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class epPollTest extends PHPUnit_Framework_TestCase
{
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('epPollTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() 
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() 
    {
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testSetPriority().
     */
    public function testSetPriority() 
    {
        $o = new epPoll($this->config);
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testGetGateways().
     */
    public function testGetGateways() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testPowerup().
     */
    public function testPowerup() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testForceGateways().
     */
    public function testForceGateways() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testDevGateway().
     */
    public function testDevGateway() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testGetNextPoll().
     */
    public function testGetNextPoll() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testGetAllDevices().
     */
    public function testGetAllDevices() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testControllerCheck().
     */
    public function testControllerCheck() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testWait().
     */
    public function testWait() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testQPacket().
     */
    public function testQPacket() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testSetPollWait().
     */
    public function testSetPollWait() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testFindDev().
     */
    public function testFindDev() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testCheckPacket().
     */
    public function testCheckPacket() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testPoll().
     */
    public function testPoll() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testCheckPacketQ().
     */
    public function testCheckPacketQ() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testCheckDev().
     */
    public function testCheckDev() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testGetConfig().
     */
    public function testGetConfig() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testCheckOtherGW().
     */
    public function testCheckOtherGW() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testRandomizegwTimeout().
     */
    public function testRandomizegwTimeout() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testGetMyConfig().
     */
    public function testGetMyConfig() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testInterpConfig().
     */
    public function testInterpConfig() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * test
     *
     * @return null
     *
     * @todo Implement testCriticalFailure().
     */
    public function testCriticalFailure() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }
}

// Call epPollTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'epPollTest::main') {
    epPollTest::main();
}
?>
