#!/usr/bin/env php
<?php
/**
 * Monitors incoming packets
 *
 * PHP Version 5
 *
 * <pre>
 * Scripts related to HUGnet
 * Copyright (C) 2007-2011 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Scripts
 * @package    Scripts
 * @subpackage Misc
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2011 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:Scripts
 *
 */
/** HUGnet code */
//require_once dirname(__FILE__).'/../head.inc.php';
/** Packet log include stuff */
require_once 'HUGnetLib/ui/Daemon.php';
require_once 'HUGnetLib/ui/Args.php';

$config = &\HUGnet\ui\Args::factory(
    $argv, $argc,
    array(
        "i" => array("name" => "DeviceID", "type" => "string", "args" => true),
        "D" => array("name" => "Data", "type" => "string", "args" => true),
        "c" => array("name" => "count", "type" => "int", "args" => true, "default" => 10000),
        "F" => array("name" => "find", "type" => "bool", "default" => false),
    )
);
$config->addLocation("/usr/share/HUGnet/config.ini");
$cli = &\HUGnet\ui\Daemon::factory($config);
$cli->help(
    $cli->system()->get("program")."
Copyright Hunt Utilities Group, LLC

Sends ping packets to endpoints.

Usage: ".$cli->system()->get("program")." -i <DeviceID> [-vF] [-f <file>] [-c <count>] [-D <data>]
Arguments:
    -i <DeviceID>   The device ID to use.  Should be a hex value up to 6 digits
    -v              Increment the verbosity
    -F              Use 'find ping' instead of standard ping
    -c <count>      Send <count> pings
    -D <data>       ASCII hex data to send in the ping.  Up to 255 bytes.
    -f <file>       The config file to use",
    $config->h
);
if (strlen($config->i) == 0) {
    $cli->help();
    $cli->out();
    $cli->out("DeviceID must be specified");
    exit(1);
}
$cli->out("Starting ".$cli->system()->get("program"));

$dev = $cli->system()->device(hexdec($config->i));

for ($i = 0; ($i < $config->c) && $cli->loop(); $i++) {
    $time = microtime(true);
    $pkt = $dev->network()->ping(
        $config->F,
        null,
        null,
        array(
            "tries" => 1,
            "find" => false,
        )
    );
    $time = microtime(true) - $time;
    if (is_string($pkt->reply())) {
        print $pkt->length()." bytes from ".$pkt->to()." seq=$i ";
        print "ttl=".$dev->get("packetTimeout")." time=".round($time, 4)."\n";
    } else {
        print "No Reply seq $i\n";
    }
    $sleep = (1 - $time) * 1000000;
    if ($sleep > 0) {
        usleep($sleep);
    }
}
print "Finished\n";
exit(0);
?>
